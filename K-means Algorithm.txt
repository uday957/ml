 import numpy as np
 import pandas as pd
 import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
 from sklearn.cluster import KMeans
 k= int(input("Enter the number of clusters (k): "))
 X, _ = make_blobs(n_samples=300, centers=k, n_features=2, 
random_state=42)
 kmeans = KMeans(n_clusters=k, random_state=42).fit(X)
 plt.scatter(X[:, 0], X[:, 1], c=kmeans.labels_, cmap='viridis', 
marker='o', edgecolor='k', s=100)
 plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 
1], c='red', marker='X', s=200, label='Centroids')
 plt.title(f'K-Means Clustering {k}')
 plt.xlabel('Feature 1')
 plt.ylabel('Feature 2')
 plt.show()
 new_instance = np.array([[float(input("Enter feature 1: ")), 
float(input("Enter feature 2: "))]])
 predicted_cluster = kmeans.predict(new_instance)
 print(f"The predicted cluster for the new instance is: 
{predicted_cluster[0]}")


 Enter the number of clusters (k):  7
 C:\Users\rohit\anaconda3\Lib\site-packages\sklearn\cluster\
 _kmeans.py:870: FutureWarning: The default value of `n_init` will 
change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly 
to suppress the warning
  warnings.warn(
 C:\Users\rohit\anaconda3\Lib\site-packages\sklearn\cluster\
 _kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on 
Windows with MKL, when there are less chunks than available threads. 
You can avoid it by setting the environment variable 
OMP_NUM_THREADS=2.
  warnings.warn(
